{
  "parser": "@typescript-eslint/parser",
  "extends": ["next/core-web-vitals"],
  "rules": {
    "semi": ["warn", "always"],
    "no-var": ["error"],
    "no-unused-vars": ["warn", { "vars": "all", "args": "none" }],
    "@typescript-eslint/no-unused-vars": [
      "warn",
      { "vars": "all", "args": "none" }
    ],
    "no-unneeded-ternary": ["warn"],
    "comma-dangle": [
      "warn",
      {
        "arrays": "always-multiline",
        "objects": "always-multiline",
        "imports": "always-multiline",
        "exports": "always-multiline",
        "functions": "never"
      }
    ],
    "prefer-destructuring": [
      "error",
      {
        "array": false,
        "object": true
      }
    ],
    "no-underscore-dangle": ["error", { "enforceInMethodNames": true }],
    "object-shorthand": ["warn", "always"],
    "prefer-const": "error",
    "prefer-template": ["error"],
    "no-console": ["warn"],
    "no-useless-concat": ["error"],
    "arrow-body-style": ["error", "as-needed"],
    "jsx-quotes": ["error", "prefer-double"],
    "react/jsx-curly-brace-presence": ["error", "never"],
    "react/jsx-no-bind": ["warn"],
    "react/jsx-pascal-case": ["error"],
    "react/boolean-prop-naming": [
      "warn",
      {
        "rule": "^(is|has)[A-Z]([A-Za-z0-9]?)+",
        "message": "It is better if your prop ({{ propName }}) starts with `is` or `has`"
      }
    ],
    "react/self-closing-comp": [
      "warn",
      {
        "component": true,
        "html": true
      }
    ],
    "react-hooks/exhaustive-deps": ["warn"],
    "react/jsx-handler-names": [
      2,
      {
        "eventHandlerPrefix": "handle",
        "eventHandlerPropPrefix": "on",
        "checkLocalVariables": true,
        "checkInlineFunction": true
      }
    ],
    "react/jsx-boolean-value": ["error", "never"],
    "import/order": [
      "warn",
      {
        "groups": [
          ["builtin", "external"],
          "internal",
          ["parent", "sibling", "index"]
        ],
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": false
        }
      }
    ],
    "no-explicit-any": "off",
    "@typescript-eslint/no-explicit-any": "off"
  },
  "env": {
    "browser": true
  }
}
