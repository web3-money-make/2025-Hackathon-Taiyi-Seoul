import {expect} from './chai-setup';
import {ethers} from 'hardhat';
import {

} from '../typechain';

async function sendRawTransaction(
    to: string, 
    callData: string, 
    value: string = "0", // ETH 값 (선택적)
    signer: any // 기본 서명자
) {
    // 방법 1: ethers.js 사용
    try {
        const tx = await signer.sendTransaction({
            to: to,
            data: callData,
            value: ethers.utils.parseEther(value),
            gasLimit: "10987529"
        });
        const receipt = await tx.wait();
        console.log(tx);
        // console.log("Transaction hash:", tx.hash);
        return receipt;
    } catch (error) {
        console.log(error);
    }
}

// Naming By index of handler Name (interestModel, handlerDS, proxy, siDS)
describe('[Entrypoint and simpleAccountFactory deploy and testing]', async function () {

  let users: any;

  beforeEach(async function () {
    users = await ethers.getSigners();
  });


  it("Send raw transaction test", async function() {
    const callData = "0x1fad948c0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000a2c42b6da734e9f04a797d9a2d1e5c656ae98d1800000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000a309b75f3b6a69a3c1b7e8b2f7d9047731ea26bd000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000180000000000000000000000000000000000000000000000000000000000007a12000000000000000000000000000000000000000000000000000000000000927c000000000000000000000000000000000000000000000000000000000000052080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003b9aca00000000000000000000000000000000000000000000000000000000000000044000000000000000000000000000000000000000000000000000000000000004600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000028418dfb3c7000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000002000000000000000000000000a4db7798981453a2c8075fe5162cfd0e2479926e00000000000000000000000014d314ee090ad27aa98e95a582b513965f4b61050000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000044095ea7b300000000000000000000000014d314ee090ad27aa98e95a582b513965f4b610500000000000000000000000000000000000000000000000000000000005b8d800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c42b14dce3000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000aa36a7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005b8d80000000000000000000000000a309b75f3b6a69a3c1b7e8b2f7d9047731ea26bd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004112af2b5b742b20fdec18222bf23b433f2c1201566c592c963a48a9a290e40f9f0cc0cad6cee9344f69c85af05ec32992e4466171de40d20de30e52b8a599e11b1b00000000000000000000000000000000000000000000000000000000000000"
    // 트랜잭션 실행
    await sendRawTransaction(
        "0xcfB2F03F531d381e2f2f45D8DBB6474c1843Bd38", // 컨트랙트 주소
        callData,
        "0", // ETH 값 (필요한 경우)
        users[0]
    );
  });

});